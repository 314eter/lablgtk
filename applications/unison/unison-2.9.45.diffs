--- unison-2.9.45/src/uigtk2.ml.orig	Mon Jun  9 18:00:31 2003
+++ unison-2.9.45/src/uigtk2.ml	Tue Jul  1 21:27:15 2003
@@ -62,23 +62,8 @@
  Font preferences
  **********************************************************************)
 
-let fontMonospaceMedium =
-  if Util.osType = `Win32 then
-    lazy (Gdk.Font.load "-*-Courier New-Medium-R-Normal--*-110-*-*-*-*-*-*")
-  else
-    lazy (Gdk.Font.load "-*-Clean-Medium-R-Normal--*-130-*-*-*-*-*-*")
-
-let fontMonospaceMediumPango =
-  if Util.osType = `Win32 then
-    lazy (Pango.Font.from_string "-*-Courier New-Medium-R-Normal--*-110-*-*-*-*-*-*")
-  else
-    lazy (Pango.Font.from_string "-*-Clean-Medium-R-Normal--*-130-*-*-*-*-*-*")
-
-let fontMonospaceBold =
-  if Util.osType = `Win32 then
-    lazy (Gdk.Font.load "-*-Courier New-Bold-R-Normal--*-110-*-*-*-*-*-*")
-  else
-    lazy (Gdk.Font.load "-*-Courier-Bold-R-Normal--*-120-*-*-*-*-*-*")
+let fontMonospaceMedium = "monospace"
+let fontMonospaceBold = "monospace bold"
 
 (*********************************************************************
   UI state variables
@@ -130,21 +115,31 @@
                        USEFUL LOW-LEVEL WIDGETS
  **********************************************************************)
 
-class scrolled_text ?editable ?word_wrap ?width ?height ?packing ?show
-    () =
+class scrolled_text ?editable ?word_wrap ?(font=fontMonospaceMedium)
+    ?width ?height ?packing ?show () =
   let sw =
-    GBin.scrolled_window ?width ?height ?packing ~show:false
+    GBin.scrolled_window ?packing ~show:false
       ~hpolicy:`NEVER ~vpolicy:`AUTOMATIC ()
   in
   let text = GText.view ?editable ?wrap_mode:(Some `WORD) ~packing:sw#add () in
-  object
+  object (self)
     inherit GObj.widget_full sw#as_widget
     method text = text
-    method insert ?(font=fontMonospaceMediumPango) s =
-      text#misc#modify_font (Lazy.force font);
-      text#buffer#set_text s;
+    val mutable font_tags = []
+    method insert ?(font=font) s =
+      let tag =
+        try List.assoc font font_tags
+        with Not_found ->
+          let tag = text#buffer#create_tag [`FONT font] in
+          font_tags <- (font,tag) :: font_tags;
+          tag
+      in
+      text#buffer#insert ~tags:[tag] s
+
     method show () = sw#misc#show ()
     initializer
+      self#misc#set_size_chars ~desc:(GPango.font_description font)
+        ?width ?height ();
       if show <> Some false then sw#misc#show ()
   end
 
@@ -419,13 +414,14 @@
   ignore (lst#append ["Reception rate"]);
   ignore (lst#append ["Data received"]);
   ignore (lst#append ["File data written"]);
-  let style = lst#misc#style#copy in
-  style#set_font (Lazy.force fontMonospaceMedium);
+  lst#misc#modify_font_by_name fontMonospaceMedium;
   for r = 0 to 2 do
     lst#set_row ~selectable:false r;
+    (*
     for c = 1 to 3 do
-      lst#set_cell ~style r c
+      lst#set_cell ~style:list#misc#style#copy r c
     done
+    *)
   done;
 
   ignore (t#event#connect#map (fun _ ->
@@ -509,7 +505,7 @@
   ignore (sel#cancel_button#connect#clicked ~callback:sel#destroy);
   ignore (sel#ok_button#connect#clicked ~callback:
             (fun () ->
-               let name = sel#get_filename in
+               let name = sel#filename in
                sel#destroy ();
                callback name));
   sel#show ();
@@ -980,11 +976,9 @@
   let optionmenu =
     GMenu.option_menu ~packing:(hb#pack ~expand:true ~fill:false) () in
 
-  let charW = Gdk.Font.char_width (Lazy.force fontMonospaceMedium) 'M' in
-  let charH = 16 in
   let t_text =
     new scrolled_text ~editable:false
-      ~width:(charW * 80) ~height:(charH * 20) ~packing:t#vbox#add ()
+      ~width:80 ~height:20 ~packing:t#vbox#add ()
   in
   t_text#insert docstr;
 
@@ -1015,11 +1009,9 @@
   let t_dismiss = GButton.button ~label ~packing:t#action_area#add () in
   t_dismiss#grab_default ();
   ignore (t_dismiss#connect#clicked ~callback:(action t));
-  let charW = Gdk.Font.char_width (Lazy.force fontMonospaceMedium) 'M' in
-  let charH = 16 in
   let t_text =
     new scrolled_text ~editable:false
-      ~width:(charW * 80) ~height:(charH * 20) ~packing:t#vbox#add ()
+      ~width:80 ~height:20 ~packing:t#vbox#add ()
   in
   t_text#insert (transcode message);
   ignore (t#event#connect#delete ~callback:(fun _ -> action t (); true));
@@ -1051,7 +1043,7 @@
               GWindow.window ~kind:`TOPLEVEL ~position:`CENTER
                 ~wm_name:Uutil.myName () in
   myWindow := Some(w);
-  w#set_border_width 4;
+  w#set_border_width 0;
   w
 
 (* ------ *)
@@ -1168,20 +1160,15 @@
     Create the details window
    *********************************************************************)
 
-  let charW = Gdk.Font.char_width (Lazy.force fontMonospaceMedium) 'M' in
-  let charH = if Util.osType = `Win32 then 20 else 16 in
-
   let detailsWindow =
     let sw =
       GBin.scrolled_window ~packing:(toplevelVBox#pack ~expand:false)
         ~hpolicy:`AUTOMATIC ~vpolicy:`AUTOMATIC () in
     GText.view ~editable:false
       ~wrap_mode:`NONE ~packing:sw#add () in
-  detailsWindow#misc#set_size_request ~height:(3 * charH) ~width: (128 * charW);
   detailsWindow#misc#set_can_focus false;
-  let style = detailsWindow#misc#style#copy in
-  style#set_font (Lazy.force fontMonospaceMedium);
-  detailsWindow#misc#set_style style;
+  detailsWindow#misc#modify_font_by_name fontMonospaceMedium;
+  detailsWindow#misc#set_size_chars ~height:3 ~width:96 ();
 
   let updateButtons () =
     match !current with
@@ -1389,7 +1376,7 @@
     updateButtons () in
 
   let globalProgressBar =
-    GMisc.statusbar ~packing:(statusHBox#pack ~expand:false) () in
+    GMisc.statusbar ~width:50 ~packing:(statusHBox#pack ~expand:false) () in
   let globalProgressContext = globalProgressBar#new_context ~name:"prog" in
   ignore (globalProgressContext#push "");
 
@@ -1702,7 +1689,7 @@
     Action bar
    *********************************************************************)
   let actionBar =
-    GButton.toolbar
+    GButton.toolbar ~style:`BOTH
       (* 2003-0519 todo (stse): how to set space size in gtk 2.0? *)
       ~orientation:`HORIZONTAL ~tooltips:true (* ~space_size:10 *)
       ~packing:(toplevelVBox#pack ~expand:false) () in
