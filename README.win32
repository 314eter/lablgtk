        Here is a small howto about installing LablGtk2 on Win32

Binary installation

 The binary distribution includes the lablglade and lablrsvg libraries.

0) Both MSVC and mingw versions of ocaml 3.09 or 3.10 should work.

1) Install the gtk2 libraries and dependencies. You can use the installer from the
   "Glade for Windows" project on Sourceforge.
     http://gladewin32.sourceforge.net/modules/news/
   The runtime environment is sufficient for bytecode, but you will need the developper
   version if you want to link with ocamlopt.
   Tests were done with Gtk+ 2.10.11, but ulterior versions should work too.

2) Install lablgtk2 binaries and scripts inside the OCaml distribution
     bin/lablgtk2.bat             -> bin
     lib/stublibs/dlllablgtk2.dll -> lib/stublibs
     lib/lablgtk2                 -> lib/lablgtk2

3) Go to the lib/lablgtk2 directory and execute
        ocaml build.ml
   This will compile the ocaml part of the library (the C part is
   already compiled.)
   It may fail on the native code version (using ocamlopt) if the
   assembler is not on your path.  Look in the Objective Caml windows
   documentation for what is needed, and check that you have a working
   installation by compiling and linking a trivial program.
   Note also that the autodection for mingw is not fool-proof
   (lablgtk2 has to be installed directly under the ocaml library), so
   if the OCaml port annouced by build.ml is not the right one, you
   should specify it by hand inside build.ml.

   You must repeat this compilation step every time you upgrade OCaml.

4) Test in examples
     lablgtk2.bat testgtk.ml

   See also the "Windows port" section of the main LablGtk2 README for
   important remarks on threads on Windows.

5) For custom linking or native code, you need to use the export
   libraries in the above DLL package. There is not default place to
   put them, so you should specify that at link time:
     ocamlopt -ccopt "/link /libpath:/home/garrigue/gtk-2.6.8/lib"
       -I +lablgtk2 lablgtk.cmxa gtkInit.cmx testgtk.ml -o testgtk.exe
   or, on Mingw
     ocamlopt -ccopt "-L/home/garrigue/gtk-2.6.8/lib" -I +lablgtk2 \
        lablgtk.cmxa gtkInit.cmx testgtk.ml -o testgtk.exe
   Again, if this fails you must make sure that your ocamlopt really works,
   and that all paths are correctly specified.


Full compilation with MSVC (for the brave)

0) You will need the MSVC version of ocaml 3.07 or more,
and cygwin development tools.
 
1) Install Gtk 2: use the precompiled binaries available at 

     http://gladewin32.sourceforge.net/modules/news/

  This time you need the developper version.
  Do NOT even try to compile it yourself from scratch.

  Try to compile a small hello-gtk.c (see the tutorial page on 
  http://www.gtk.org) before going further.

3) Copy config.make.nt to config.make, and edit it to set GTKROOT.

4) Simply do "make" and "make opt" for the native version.

5) Install ("make install") and test.


Full compilation with mingw and OCaml 3.11 (for the true brave)

0) You will need mingw version of ocaml 3.11 or more,
and cygwin development tools. The mingw compilers must be installed by 
cygwin setup script and not form mingw website.
Check your installation by trying to compile and run a hello world 
C program with
    gcc -mno-cygwin -mms-bitfields main.c
 
You must also install flexdll (at least 0.7) from 
	http://alain.frisch.fr/flexdll.html

Then compile and install all files somewhere in your cygwin path.

1) Install Gtk 2: use the precompiled binaries available at 

     http://www.gtk.org/download-windows

  Download the latest "All-in-one bundle" and install it in a directory 
  without spaces in the name. From now on I assume it is installed in c:\GTK, 
  i.e. /cygdrive/c/GTK.
  It contains developper and runtime versions of Gtk.
  Do NOT even try to compile it yourself from scratch.

  Try to compile and run a small hello-gtk.c (see the tutorial page on 
  http://www.gtk.org) before going further.

  You may unzip optional libraries available from 
    http://ftp.gnome.org/pub/gnome/binaries/win32
  in c:\GTK.
  For example to have GtkSourceView 1 support, you have to unzip : 
   libgnomeprint-dev.xxx.zip
   libgnomeprint.xxx.zip
   libart_gpl-dev.xxx.zip
   libart_gpl-dev.xxx.zip
   libxml2-dev.xxx.zip
   libxml2.xxx.zip
   win_iconv_dll-tml-xxx.zip
   gtksourceview-dev.1.xxx.zip
   gtksourceview.1.xxx.zip

   
  If you need to check that all dependencies are installed, use
   pkg-config --libs gtksourceview-1.0
  and see if an error is reported.

2) Prepend C:\GTK\bin to your windows PATH and restart all 
   cygwin windows.

3) In a cygwin shell, run configure with 
	CYGWIN=nobinmode ./configure
   
   If ./configure is not present (svn users) then generate it with:
	aclocal -I /cygdrive/c/GTK/share/aclocal
        autoconf

4) Simply do "make" and "make opt" for the native version.

5) Install ("make install") and test.

The rationale behind CYGWIN=nobinmode variable for configure is that 
pkg-config is a native windows program which outputs \r\n instead of
usual unix \n. The CYGWIN variable forces the shell to strip down all 
\r from command answers.

$Id$
